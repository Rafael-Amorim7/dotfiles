#--------------------------------------------------------------------------
# Configuration
#--------------------------------------------------------------------------

# Use Vi mode
setw -g mode-keys vi

# Increase scrollback buffer size
set -g history-limit 10000

# Start window and pane numbering from 1 for easier switching
set -g base-index 1
setw -g pane-base-index 1

# Allow automatic renaming of windows
set -g allow-rename on

# Renumber windows when one is removed.
set -g renumber-windows on

# Improve colors
set -g default-terminal "${TERM}"

# Enable undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# Enable undercurl colors
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Allow the mouse to resize windows and select tabs
set -g mouse on

# Allow tmux to set the terminal title
set -g set-titles on

# Monitor window activity to display in the status bar
setw -g monitor-activity on

# A bell in another window should cause a bell in the current window
set -g bell-action any

# Don't show distracting notifications
set -g visual-bell off
set -g visual-activity off

# Focus events enabled for terminals that support them
set -g focus-events on

# Useful when using sharing a session with different size terminals
setw -g aggressive-resize on

# don't detach tmux when killing a session
set -g detach-on-destroy off

# address vim mode switching delay (http://superuser.com/a/252717/65504)
set -s escape-time 0

#--------------------------------------------------------------------------
# Plugins
#--------------------------------------------------------------------------

set -g @plugin 'tmux-plugins/tmux-resurrect' # persist tmux sessions after computer restart

#--------------------------------------------------------------------------
# Status line
#--------------------------------------------------------------------------

# Status line customisation
set-option -g status-left-length 100
set-option -g status-right-length 100

set-option -g status-left " #{session_name}  "
# set-option -g status-left " " # Screencast mode

# set-option -g status-right "#{pane_title} "
set-option -g status-right "%d %b %Y 📆   %l:%M ⏰ "

set-option -g status-style "fg=#545c7e bg=#1f2335"
#set-option -g status-style "fg=#545c7e bg=default" # Screencast mode

set-option -g window-status-format "#[fg=#545c7e]#{window_index}/#{pane_current_command} "
set-option -g window-status-current-format "#[fg=#545c7e]#{window_index}/#[fg=#E9E9EA]#{pane_current_command} "
# set-option -g window-status-format "· " # Screencast mode
# set-option -g window-status-current-format "· " # Screencast mode

set-option -g window-status-current-style "fg=#E9E9EA"
set-option -g window-status-activity-style none

set-option -g pane-active-border-style "fg=#1f2335"
set-option -g pane-border-style "fg=#1f2335"

#--------------------------------------------------------------------------
# Key Bindings
#--------------------------------------------------------------------------

# -r means that the bind can repeat without entering prefix again
# -n means that the bind doesn't use the prefix

# Set the prefix to Ctrl+Space
set -g prefix C-Space

# Send prefix to a nested tmux session by doubling the prefix
bind C-Space send-prefix

# 'PREFIX r' to reload of the config file
unbind r
bind r source-file ~/.tmux.conf\; display-message '~/.tmux.conf reloaded'

# Clean terminal
bind -r C-l send-keys "C-l"

# Move around panes like in vim
bind -r h resize-pane -L 5
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"

# Switch between previous and next windows with repeatable
bind -r n next-window
bind -r p previous-window

# Allow holding Ctrl when using using prefix+p/n for switching windows
bind C-p previous-window
bind C-n next-window

# Move the current window to the next window or previous window position
bind-key > swap-window -t +1 \; next
bind-key < swap-window -t -1 \; prev

# Switch between two most recently used windows
bind ^ last-window

# Switch between two most recently used sessions
bind Space switch-client -l

# use PREFIX+\ (or PREFIX+\) to split window horizontally and PREFIX+- or
# (PREFIX+_) to split vertically also use the current pane path to define the
# new pane path
bind \\ split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Change the path for newly created windows
bind c new-window -c "#{pane_current_path}"

#--------------------------------------------------------------------------
# Vim-Tmux
#--------------------------------------------------------------------------
bind y run -b "tmux show-buffer | xclip -selection clipboard"\; display-message "Copied tmux buffer to system clipboard"

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

bind-key -r I run-shell "~/bin/tmux-sessionizer ~/docker/code/inside/current"
bind-key -r D run-shell "~/bin/tmux-sessionizer ~/docker"
bind-key -r A run-shell "~/bin/tmux-sessionizer ~/docker/code/issue-analytics"
bind-key -r H run-shell "~/bin/tmux-sessionizer ~/docker/code/devhelper/current"
bind -r N neww -c "#{pane_current_path}" "nvim ~/.config/nvim"
bind -r T neww -c "#{pane_current_path}" "nvim ~/.tmux.conf"
bind -r O neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/todo/TODO.md"
bind -r R neww -c "#{pane_current_path}" "[[ -e TODO.md ]] && nvim TODO.md || nvim ~/todo/CR.md"

bind-key -n C-g run-shell "~/.fzf-git.sh"

# tpm plugin
set -g @plugin 'tmux-plugins/tpm'

# # list of tmux plugins
set -g @plugin 'christoomey/vim-tmux-navigator'
# set -g @plugin 'jimeh/tmux-themepack'
# set -g @plugin 'tmux-plugins/tmux-resurrect' # persist tmux sessions after computer restart
# set -g @plugin 'tmux-plugins/tmux-continuum' # automatically saves sessions for you every 15 minutes

# set -g @themepack 'powerline/double/blue'

# set -g @resurrect-capture-pane-contents 'on'
# set -g @continuum-restore 'on'
# set -g @resurrect-strategy-nvim 'session'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
  # |-> vim-tmux-navigator
  # |-> tpm 
  # |-> tmux-themepack
  # |-> tmux-resurrect
  # `-> tmux-continuum
